import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

function PartyComparison() {
  const [activeTab, setActiveTab] = useState("modern");

  const partyTypes = {
    modern: {
      id: "modern",
      name: "ƒê·∫£ng ki·ªÉu m·ªõi",
      color: "#1f1f1f",
      iconBg: "rgba(31, 31, 31, 0.1)",
      backgroundImage: "https://www.tapchicongsan.org.vn/image/journal/article?img_id=31480821&t=1743921920514",
      characteristics: [
        {
          title: "T∆∞ t∆∞·ªüng l√Ω lu·∫≠n",
          description: "ƒê·∫£ng ki·ªÉu m·ªõi ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n n·ªÅn t·∫£ng l√Ω lu·∫≠n khoa h·ªçc c·ªßa ch·ªß nghƒ©a M√°c-L√™nin, c√≥ h·ªá th·ªëng quan ƒëi·ªÉm v√† ƒë∆∞·ªùng l·ªëi r√µ r√†ng v·ªÅ c√°ch m·∫°ng v√† ph√°t tri·ªÉn x√£ h·ªôi.",
          icon: "üìö"
        },
        {
          title: "C∆° c·∫•u t·ªï ch·ª©c",
          description: "T·ªï ch·ª©c ch·∫∑t ch·∫Ω, c√≥ k·ª∑ lu·∫≠t cao theo nguy√™n t·∫Øc t·∫≠p trung d√¢n ch·ªß, th·ªëng nh·∫•t v·ªÅ t∆∞ t∆∞·ªüng v√† h√†nh ƒë·ªông t·ª´ trung ∆∞∆°ng ƒë·∫øn c∆° s·ªü.",
          icon: "üèõÔ∏è"
        },
        {
          title: "M·ªëi quan h·ªá v·ªõi qu·∫ßn ch√∫ng",
          description: "G·∫Øn b√≥ m·∫≠t thi·∫øt v·ªõi qu·∫ßn ch√∫ng nh√¢n d√¢n, ƒë·∫°i di·ªán cho l·ª£i √≠ch c·ªßa giai c·∫•p c√¥ng nh√¢n v√† nh√¢n d√¢n lao ƒë·ªông, l·∫•y d√¢n l√†m g·ªëc trong m·ªçi ch√≠nh s√°ch v√† ho·∫°t ƒë·ªông.",
          icon: "üë•"
        },
        {
          title: "Ph∆∞∆°ng th·ª©c l√£nh ƒë·∫°o",
          description: "L√£nh ƒë·∫°o to√†n di·ªán, khoa h·ªçc v√† linh ho·∫°t; th∆∞·ªùng xuy√™n ƒë·ªïi m·ªõi ph∆∞∆°ng th·ª©c l√£nh ƒë·∫°o theo h∆∞·ªõng d√¢n ch·ªß, c√¥ng khai, minh b·∫°ch v√† hi·ªáu qu·∫£.",
          icon: "üí°"
        }
      ],
      examples: [
        "ƒê·∫£ng C·ªông s·∫£n Vi·ªát Nam",
        "ƒê·∫£ng C·ªông s·∫£n Li√™n X√¥ (tr∆∞·ªõc ƒë√¢y)",
        "ƒê·∫£ng C·ªông s·∫£n Trung Qu·ªëc"
      ],
      quote: "ƒêo√†n k·∫øt, ƒëo√†n k·∫øt, ƒë·∫°i ƒëo√†n k·∫øt. Th√†nh c√¥ng, th√†nh c√¥ng, ƒë·∫°i th√†nh c√¥ng."
    },
    traditional: {
      id: "traditional",
      name: "ƒê·∫£ng ki·ªÉu c≈©",
      color: "#444444",
      iconBg: "rgba(68, 68, 68, 0.1)",
      backgroundImage: "https://yeulichsu.edu.vn/upload/2024/01/tim-hieu-su-ra-doi-cua-chu-nghia-tu-ban-phuong-tay.webp",
      characteristics: [
        {
          title: "T∆∞ t∆∞·ªüng l√Ω lu·∫≠n",
          description: "Th∆∞·ªùng d·ª±a tr√™n t∆∞ t∆∞·ªüng ph·ª•c v·ª• cho giai c·∫•p t∆∞ s·∫£n ho·∫∑c phong ki·∫øn, thi·∫øu h·ªá th·ªëng l√Ω lu·∫≠n khoa h·ªçc v√† to√†n di·ªán v·ªÅ ph√°t tri·ªÉn x√£ h·ªôi.",
          icon: "üí∞"
        },
        {
          title: "C∆° c·∫•u t·ªï ch·ª©c",
          description: "T·ªï ch·ª©c l·ªèng l·∫ªo, thi·∫øu t√≠nh k·ª∑ lu·∫≠t v√† th·ªëng nh·∫•t cao; c∆∞∆°ng lƒ©nh v√† ch∆∞∆°ng tr√¨nh h√†nh ƒë·ªông kh√¥ng r√µ r√†ng, th∆∞·ªùng thay ƒë·ªïi theo l·ª£i √≠ch nh√≥m.",
          icon: "üèöÔ∏è"
        },
        {
          title: "M·ªëi quan h·ªá v·ªõi qu·∫ßn ch√∫ng",
          description: "T√°ch r·ªùi kh·ªèi qu·∫ßn ch√∫ng nh√¢n d√¢n, ch·ªß y·∫øu ƒë·∫°i di·ªán v√† b·∫£o v·ªá l·ª£i √≠ch c·ªßa c√°c giai c·∫•p th·ªëng tr·ªã, ch∆∞a th·ª±c s·ª± quan t√¢m ƒë·∫øn l·ª£i √≠ch c·ªßa ƒëa s·ªë ng∆∞·ªùi d√¢n lao ƒë·ªông.",
          icon: "üë§"
        },
        {
          title: "Ph∆∞∆°ng th·ª©c l√£nh ƒë·∫°o",
          description: "Ph∆∞∆°ng th·ª©c l√£nh ƒë·∫°o b·∫£o th·ªß, thi·∫øu linh ho·∫°t v√† d√¢n ch·ªß; ch·∫≠m ƒë·ªïi m·ªõi, √≠t ti·∫øp thu √Ω ki·∫øn t·ª´ c∆° s·ªü v√† th∆∞·ªùng √°p ƒë·∫∑t quy·∫øt ƒë·ªãnh t·ª´ tr√™n xu·ªëng.",
          icon: "üîí"
        }
      ],
      examples: [
        "C√°c ƒë·∫£ng phong ki·∫øn th·∫ø k·ª∑ 19",
        "C√°c ƒë·∫£ng t∆∞ s·∫£n c·ªï ƒëi·ªÉn",
        "C√°c ƒë·∫£ng qu√Ω t·ªôc ch√¢u √Çu th·ªùi k·ª≥ ƒë·∫ßu"
      ],
      quote: "Duy tr√¨ hi·ªán tr·∫°ng v√† b·∫£o v·ªá ƒë·∫∑c quy·ªÅn c·ªßa giai c·∫•p th·ªëng tr·ªã."
    }
  };

  const styles = {
    container: {
      padding: "40px",
      background: "linear-gradient(to right, #f0f0f0, #cccccc)",
      minHeight: "100vh",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    header: {
      textAlign: "center",
      marginBottom: "40px",
      color: "#333",
      fontSize: "36px",
      fontWeight: "700",
      textShadow: "1px 1px 2px rgba(0,0,0,0.1)",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    tabContainer: {
      display: "flex",
      justifyContent: "center",
      marginBottom: "30px",
    },
    tab: {
      padding: "14px 30px",
      margin: "0 15px",
      borderRadius: "30px",
      cursor: "pointer",
      fontWeight: "bold",
      transition: "all 0.3s ease",
      fontSize: "18px",
      boxShadow: "0 4px 6px rgba(0,0,0,0.1)",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    activeTab: {
      backgroundColor: "#1f1f1f",
      color: "#dcd7d7",
      boxShadow: "0 6px 12px rgba(0,0,0,0.3)",
      transform: "translateY(-3px)",
    },
    inactiveTab: {
      backgroundColor: "#dcd7d7",
      color: "#333",
    },
    contentContainer: {
      maxWidth: "900px",
      margin: "0 auto",
      backgroundColor: "#fff",
      borderRadius: "15px",
      overflow: "hidden",
      boxShadow: "0 15px 35px rgba(0,0,0,0.1)",
    },
    modernBanner: {
      display: "flex",
      flexDirection: "column",
      justifyContent: "flex-end",
      alignItems: "center",
      padding: "40px 20px",
      backgroundImage: `url("${partyTypes.modern.backgroundImage}")`,
      backgroundSize: "cover",
      backgroundPosition: "center top",
      color: "white",
      position: "relative",
      height: "350px",
    },
    traditionalBanner: {
      display: "flex",
      flexDirection: "column",
      justifyContent: "flex-end",
      alignItems: "center",
      padding: "40px 20px",
      backgroundImage: `url("${partyTypes.traditional.backgroundImage}")`,
      backgroundSize: "cover",
      backgroundPosition: "center top",
      color: "white",
      position: "relative",
      height: "350px",
    },
    overlay: {
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: "rgba(31, 31, 31, 0.75)",
      zIndex: 1,
    },
    traditionalOverlay: {
      position: "absolute",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: "rgba(68, 68, 68, 0.75)",
      zIndex: 1,
    },
    bannerContent: {
      position: "relative",
      zIndex: 2,
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      width: "100%",
      marginTop: "auto",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    partyName: {
      fontSize: "38px",
      fontWeight: "bold",
      marginBottom: "15px",
      textShadow: "2px 2px 4px rgba(0,0,0,0.6)",
      letterSpacing: "1px",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    quote: {
      fontStyle: "italic",
      textAlign: "center",
      maxWidth: "700px",
      textShadow: "1px 1px 2px rgba(0,0,0,0.6)",
      marginBottom: "15px",
      fontSize: "18px",
      lineHeight: "1.6",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    characteristicsContainer: {
      padding: "40px",
    },
    characteristicCard: {
      marginBottom: "30px",
      backgroundColor: "#f9f9f9",
      borderRadius: "12px",
      padding: "25px",
      boxShadow: "0 8px 15px rgba(0,0,0,0.05)",
      transition: "all 0.3s ease",
      border: "1px solid rgba(0,0,0,0.05)",
    },
    modernCard: {
      borderLeft: "5px solid #1f1f1f",
    },
    traditionalCard: {
      borderLeft: "5px solid #444444",
    },
    characteristicHeader: {
      display: "flex",
      alignItems: "center",
      marginBottom: "15px",
    },
    iconContainer: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      width: "50px",
      height: "50px",
      borderRadius: "50%",
      marginRight: "20px",
      fontSize: "24px",
    },
    modernIcon: {
      backgroundColor: "rgba(31, 31, 31, 0.1)",
      color: "#1f1f1f",
    },
    traditionalIcon: {
      backgroundColor: "rgba(68, 68, 68, 0.1)",
      color: "#444444",
    },
    title: {
      fontSize: "22px",
      fontWeight: "bold",
      color: "#333",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    description: {
      color: "#333",
      lineHeight: "1.8",
      fontSize: "18px",
      paddingLeft: "70px",
      fontFamily: "'Merriweather', 'Times New Roman'",
      fontWeight: "normal",
    },
    examples: {
      margin: "40px 0 30px",
      padding: "25px",
      borderRadius: "12px",
      boxShadow: "0 8px 15px rgba(0,0,0,0.05)",
    },
    modernExamples: {
      backgroundColor: "rgba(31, 31, 31, 0.05)",
      borderLeft: "5px solid #1f1f1f",
    },
    traditionalExamples: {
      backgroundColor: "rgba(68, 68, 68, 0.05)",
      borderLeft: "5px solid #444444",
    },
    examplesTitle: {
      marginBottom: "15px",
      fontSize: "22px", 
      fontWeight: "bold",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    modernExamplesTitle: {
      color: "#1f1f1f",
    },
    traditionalExamplesTitle: {
      color: "#444444",
    },
    examplesList: {
      listStyle: "none",
      paddingLeft: "5px",
      color: "#333",
    },
    exampleItem: {
      margin: "10px 0",
      padding: "5px 0",
      display: "flex",
      alignItems: "center",
      fontSize: "18px",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    exampleBullet: {
      marginRight: "10px",
      fontSize: "20px",
    },
    buttonContainer: {
      display: "flex",
      justifyContent: "center",
      margin: "30px 0",
    },
    button: {
      padding: "14px 28px",
      borderRadius: "30px",
      cursor: "pointer",
      fontWeight: "bold",
      transition: "all 0.3s ease",
      fontSize: "16px",
      border: "none",
      boxShadow: "0 6px 12px rgba(0,0,0,0.1)",
      fontFamily: "'Merriweather', 'Times New Roman'",
    },
    switchButton: {
      backgroundColor: "#dcd7d7",
      color: "#333",
    }
  };

  const togglePartyType = (type) => {
    setActiveTab(type);
  };

  const activeParty = partyTypes[activeTab];

  const renderBanner = () => {
    if (activeTab === "modern") {
      return (
        <div style={styles.modernBanner}>
          <div style={styles.overlay}></div>
          <div style={styles.bannerContent}>
            <h2 style={styles.partyName}>{activeParty.name}</h2>
            <p style={styles.quote}>"{activeParty.quote}"</p>
          </div>
        </div>
      );
    } else {
      return (
        <div style={styles.traditionalBanner}>
          <div style={styles.traditionalOverlay}></div>
          <div style={styles.bannerContent}>
            <h2 style={styles.partyName}>{activeParty.name}</h2>
            <p style={styles.quote}>"{activeParty.quote}"</p>
          </div>
        </div>
      );
    }
  };

  return (
    <div style={styles.container}>
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <h1 style={styles.header}>So s√°nh ƒë·∫£ng ki·ªÉu c≈© v√† ƒë·∫£ng ki·ªÉu m·ªõi</h1>
      </motion.div>

      <div style={styles.tabContainer}>
        {Object.values(partyTypes).map((partyType) => (
          <motion.div
            key={partyType.id}
            style={{
              ...styles.tab,
              ...(activeTab === partyType.id ? styles.activeTab : styles.inactiveTab)
            }}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            onClick={() => togglePartyType(partyType.id)}
          >
            {partyType.name}
          </motion.div>
        ))}
      </div>

      <AnimatePresence mode="wait">
        <motion.div
          key={activeTab}
          style={styles.contentContainer}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0, y: -20 }}
          transition={{ duration: 0.4 }}
        >
          {renderBanner()}

          <div style={styles.characteristicsContainer}>
            {activeParty.characteristics.map((characteristic, index) => (
              <motion.div
                key={index}
                style={{
                  ...styles.characteristicCard,
                  ...(activeTab === "modern" ? styles.modernCard : styles.traditionalCard)
                }}
                whileHover={{ transform: "translateY(-5px)" }}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.3, delay: index * 0.1 }}
              >
                <div style={styles.characteristicHeader}>
                  <div 
                    style={{
                      ...styles.iconContainer,
                      ...(activeTab === "modern" ? styles.modernIcon : styles.traditionalIcon)
                    }}
                  >
                    {characteristic.icon}
                  </div>
                  <h3 style={styles.title}>{characteristic.title}</h3>
                </div>
                <p style={styles.description}>{characteristic.description}</p>
              </motion.div>
            ))}

            <motion.div
              style={{
                ...styles.examples,
                ...(activeTab === "modern" ? styles.modernExamples : styles.traditionalExamples)
              }}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3, delay: 0.5 }}
            >
              <h3 
                style={{
                  ...styles.examplesTitle,
                  ...(activeTab === "modern" ? styles.modernExamplesTitle : styles.traditionalExamplesTitle)
                }}
              >
                V√≠ d·ª• ƒëi·ªÉn h√¨nh:
              </h3>
              <ul style={styles.examplesList}>
                {activeParty.examples.map((example, index) => (
                  <li key={index} style={styles.exampleItem}>
                    <span 
                      style={{
                        ...styles.exampleBullet,
                        color: activeTab === "modern" ? "#1f1f1f" : "#444444"
                      }}
                    >
                      ‚Ä¢
                    </span>
                    {example}
                  </li>
                ))}
              </ul>
            </motion.div>
          </div>

          <div style={styles.buttonContainer}>
            <button
              style={{
                ...styles.button,
                ...styles.switchButton
              }}
              onClick={() => togglePartyType(activeTab === "modern" ? "traditional" : "modern")}
            >
              Xem {activeTab === "modern" ? "ƒê·∫£ng ki·ªÉu c≈©" : "ƒê·∫£ng ki·ªÉu m·ªõi"}
            </button>
          </div>
        </motion.div>
      </AnimatePresence>
    </div>
  );
}

export default PartyComparison;